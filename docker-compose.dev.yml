# Development Mode Docker Compose for DevMorph Studio
# This configuration is optimized for development with hot-reload and detailed logging

services:
  # Example app service with development optimizations
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    environment:
      - APP_ENV=development
      - NODE_ENV=development
      - DEBUG=*
      - HOT_RELOAD=true
      - DEV_TOOLS_ENABLED=true
    volumes:
      - .:/app
      - node_modules:/app/node_modules  # Example for Node.js
    ports:
      - "${APP_PORT:-3000}:${APP_PORT:-3000}"
    stdin_open: true
    tty: true
    networks:
      - devmorph

  # Development database with persisted data
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dev}
      POSTGRES_USER: ${POSTGRES_USER:-dev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev}
    volumes:
      - db_dev_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - devmorph

  # Development Redis
  redis:
    image: redis:7-alpine
    volumes:
      - redis_dev_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - devmorph
    command: redis-server --appendonly yes

  # Development web server
  web:
    image: nginx:alpine
    ports:
      - "${WEB_PORT:-80}:80"
      - "${SSL_PORT:-443}:443"
    volumes:
      - .:/app
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl
    depends_on:
      - app
    networks:
      - devmorph

networks:
  devmorph:
    driver: bridge

volumes:
  db_dev_data:
  redis_dev_data:
  node_modules: