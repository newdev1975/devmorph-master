# Mix Mode Docker Compose for DevMorph Studio
# This configuration combines development and design workflows for collaborative work

services:
  # Mixed app service supporting both dev and design workflows
  app:
    build:
      context: .
      dockerfile: Dockerfile.mix
    environment:
      - APP_ENV=mix
      - NODE_ENV=development
      - DEV_TOOLS_ENABLED=true
      - DESIGN_MODE=true
      - HOT_RELOAD=true
    volumes:
      - .:/app
      - mix_node_modules:/app/node_modules
      - ./src:/app/src
      - ./assets:/app/assets
      - ./design-system:/app/design-system
    ports:
      - "${APP_PORT:-3000}:3000"
      - "3001:3001"  # Design preview
      - "6006:6006"  # Storybook
    stdin_open: true
    tty: true
    networks:
      - devmorph

  # Database for mixed environment
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-mix}
      POSTGRES_USER: ${POSTGRES_USER:-mix}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mix}
    volumes:
      - db_mix_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    networks:
      - devmorph

  # Redis for mixed environment
  redis:
    image: redis:7-alpine
    volumes:
      - redis_mix_data:/data
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    networks:
      - devmorph
    command: redis-server --appendonly yes

  # Web server for mixed mode
  web:
    image: nginx:alpine
    ports:
      - "${WEB_PORT:-8080}:80"  # Different port to avoid conflicts
      - "8443:443"
    volumes:
      - .:/app
      - ./nginx.mix.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl
    depends_on:
      - app
    networks:
      - devmorph

  # Design tooling service
  design-tools:
    build:
      context: .
      dockerfile: Dockerfile.design-tools
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - mix_design_node_modules:/app/node_modules
    ports:
      - "3002:3002"  # Additional port for design tools
    networks:
      - devmorph

  # Collaboration service (e.g., for real-time collaboration)
  collaboration:
    image: node:18-alpine
    working_dir: /app
    command: >
      sh -c "
        npm install -g socket.io &&
        node ./collaboration-server.js
      "
    volumes:
      - .:/app
    ports:
      - "3004:3004"
    networks:
      - devmorph

networks:
  devmorph:
    driver: bridge

volumes:
  db_mix_data:
  redis_mix_data:
  mix_node_modules:
  mix_design_node_modules: